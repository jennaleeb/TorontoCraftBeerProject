print(scotch_data[grep(scotch, rownames(scotch_data)),])
}
for(scotch in rownames(closestScotch("Bunnahabha"))){
#scotch_feature_vector <- scotch_data[grep("Bunnahabha", rownames(scotch_data)),]
#data2 <- rbind(scotch_data[grep("Bunnahabha", rownames(scotch_data)),], scotch_feature_vector)
print(scotch)
print(scotch_data[grep(scotch, rownames(scotch_data)),])
rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),])
}
for(scotch in rownames(closestScotch("Bunnahabha"))){
#scotch_feature_vector <- scotch_data[grep("Bunnahabha", rownames(scotch_data)),]
#data2 <- rbind(scotch_data[grep("Bunnahabha", rownames(scotch_data)),], scotch_feature_vector)
print(scotch)
print(scotch_data[grep(scotch, rownames(scotch_data)),])
frame <- rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),])
}
frame
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_target <- scotch_data[grep(scotch_name), rownames(scotch_data),]
scotch_closest_list <- closestScotch(scotch_name)
for(scotch in rownames(scotch_closest_list)){
dist_frame <- rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),])
}
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for(scotch in rownames(scotch_closest_list)){
dist_frame <- rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),])
}
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for(scotch in rownames(scotch_closest_list)){
rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),]) -> dist_frame
}
dist_frame
}
scotchDistClosest("Bunnahabha")
length(scotch_closest_list)
size(scotch_closest_list)
scotch_closest_list
length(rownames(scotch_closest_list))
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(scotch, rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame
}
scotchDistClosest("Bunnahabha")
rownames(scotch_closest_list)
rownames(scotch_closest_list)[1]
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame
}
scotchDistClosest("Bunnahabha")
dist(scotchDistClosest("Bunnahabha"))
dist(scotchDistClosest("Bunnahabha"), "binary")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
}
dist(scotchDistClosest("Bunnahabha"), "binary")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
rbind(m, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
rbind(m, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame
}
cotchDistClosest("Bunnahabha")
scotchDistClosest("Bunnahabha")
rbind(scotchDistClosest("Bunnahabha"), scotch_data[grep("Bunnahabha", rownames(scotch_data)),])
rbind(scotchDistClosest("Bunnahabha"), b)
b
colnames(scotch_data)
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
}
scotchDistClosest("Bunnahabha")
rbind(scotchDistClosest("Bunnahabha"), b)
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
m
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
#colnames(dist_frame) <- colnames(scotch_data)
#rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
dist_frame
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
dist_frame
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
#colnames(dist_frame) <- colnames(scotch_data)
#rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
dist_frame
m
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
#colnames(dist_frame) <- colnames(scotch_data)
#rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame
}
scotchDistClosest("Bunnahabha")
scotchDistClosest <- function(scotch_name) {
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
}
scotchDistClosest("Bunnahabha")
dist(scotchDistClosest("Bunnahabha"), "binary")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"))
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), scale = "column", dendrogram = "none", color = "Blues")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), dendrogram = "none", color = "Blues")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"))
shiny::runApp('scotch-app-shiny')
help(d3heatmap)
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"),colors="YlOrRd")
help(d3heatmap)
shiny::runApp('scotch-app-shiny')
help(d3heatmap)
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
help(d3heatmap)
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"),dendrogram = "row", colors="YlOrRd")
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), dendrogram = "row", colors="YlOrRd")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), dendrogram = "col", colors="YlOrRd")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), dendrogram = "both", colors="YlOrRd")
d3heatmap(dist(scotchDistClosest("Bunnahabha"), "binary"), dendrogram = "row", colors="YlOrRd")
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
dist_frame
scotch_name <- "Bunnahabha"
scotch_closest_list <- closestScotch(scotch_name)
closestScotch <- function(scotch_name) {
scotch_vec <- scotch.dist[scotch_name,]
scotch_vec <- sort(scotch_vec)
scotch_frame <- as.data.frame(scotch_vec[2:6])
colnames(scotch_frame) <- paste("Distance to", scotch_name)
round(scotch_frame,3)
}
scotch_closest_list <- closestScotch(scotch_name)
scotch_data <- import("data/scotch_data_cleaned.csv")
head(scotch_data)
scotch_data[,1] <- NULL
scotch.dist <- dist(scotch_data[,2:69], "binary")
scotch.dist <- as.matrix(scotch.dist, labels=TRUE)
colnames(scotch.dist) <- rownames(scotch.dist) <- scotch_data[,1]
rownames(scotch_data) <- scotch_data[,1]
head(scotch.dist)
scotch_data <- import("scotch_data_cleaned.csv")
head(scotch_data)
scotch_data[,1] <- NULL
scotch.dist <- dist(scotch_data[,2:69], "binary")
scotch.dist <- as.matrix(scotch.dist, labels=TRUE)
colnames(scotch.dist) <- rownames(scotch.dist) <- scotch_data[,1]
rownames(scotch_data) <- scotch_data[,1]
head(scotch.dist)
closestScotch <- function(scotch_name) {
scotch_vec <- scotch.dist[scotch_name,]
scotch_vec <- sort(scotch_vec)
scotch_frame <- as.data.frame(scotch_vec[2:6])
colnames(scotch_frame) <- paste("Distance to", scotch_name)
round(scotch_frame,3)
}
scotch_closest_list <- closestScotch(scotch_name)
scotch_closest_list
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame[i,]
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
scotch_closest_list
scotch_data[grep("Bunnahabha", rownames(scotch_data)),]
scotch_data[grep(rownames(scotch_closest_list)[i]
as
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
dist_frame[i,]
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
colnames(scotch_data)
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
dist_frame
scotch_closest_list <- closestScotch(scotch_name)
scotch_closest_list
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
dist_frame
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
dist_frame
dist_frame[i,]
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]
rbind(scotchDistClosest("Bunnahabha"), b)
m <- data.frame(matrix(0, ncol = length(scotch_data)))
m
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
dist_frame
m <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
m
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(dist_frame, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
m <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
scotchDistClosest <- function(scotch_name) {
# make some empty matrices
dist_frame <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
m <- as.data.frame(matrix(0, ncol = 69, nrow = 0))
# call the function to find the closest scotches
scotch_closest_list <- closestScotch(scotch_name)
rbind(dist_frame, scotch_data[grep(scotch_name, rownames(scotch_data)),]) -> dist_frame
# make a new frame
for (i in 1:length(rownames(scotch_closest_list))) {
rbind(m, scotch_data[grep(rownames(scotch_closest_list)[i], rownames(scotch_data)),]) -> dist_frame[i,]
}
colnames(dist_frame) <- colnames(scotch_data)
dist_frame
}
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
shiny::runApp('scotch-app-shiny')
beer_data <- import("BeerSurveyResponses_Test.csv")
beer_data
beer_data$Taste
beer_data %>%
cbind(., with(., model.matrix(~ Colour + 0)),
with(., model.matrix(~ Opacity + 0)),
with(., model.matrix(~ Taste + 0)))
taste.lev <- unique(gsub(" ", "", unlist(strsplit(beer_data$Taste, ",")), fixed = TRUE))
mnames <- gsub(" ", "_", paste("taste", taste.lev, sep = "."))
result <- matrix(data = "0", nrow = length(beer_data$Taste), ncol = length(taste.lev))
char.var <- as.character(beer_data$Taste)
for (i in 1:length(taste.lev)) {
result[grep(taste.lev[i], char.var, fixed = TRUE), i] <- "1"
}
result <- data.frame(result, stringsAsFactors = TRUE)
result
colnames(result) <- mnames
beer_data <- cbind(beer_data,result)
View(beer_data)
multiToBinary <- function(data, attr_name, colnum) {
col <- data[,colnum]
lev <- unique(gsub(" ", "", unlist(strsplit(col, ",")), fixed = TRUE))
mnames <- gsub(" ", "_", paste(toString(attr_name), lev, sep = "."))
result <- matrix(data = "0", nrow = length(col), ncol = length(lev))
char.var <- as.character(col)
for (i in 1:length(lev)) {
result[grep(lev[i], char.var, fixed = TRUE), i] <- "1"
}
result <- data.frame(result, stringsAsFactors = TRUE)
colnames(result) <- mnames
data <- cbind(data,result)
}
beer_data <- import("BeerSurveyResponses_Test.csv")
beer_data <- multiToBinary(beer_data, "taste", 6)
beer_data <- multiToBinary(beer_data, "body", 7)
View(beer_data)
beer_data
beer_data <- multiToBinary(beer_data, "opacity", 5)
View(beer_data)
feature_names <- cbind("color", "opacity", "taste")
feature_names
feature_names <- ("color", "opacity", "taste")
feature_names <- ["color", "opacity", "taste"]
beer_data
feature_names <- cbind("color", "opacity", "taste", "body", "carbonation")
length(feature_names)
feature_names <- hash("color" = 4, "opacity" = 5, "taste" = 6, "body" = 7, "carbonation" = 8)
length(feature_names)
feature_names$color
feature_names$taste
hash(1)
hash[1]
feature_names[[keys(feature_names)]]
keys(feature_names)
keys(feature_names)[1]
feature_names$(keys(feature_names)[1])
feature_names$(keys(feature_names)[1]))
feature_names$keys(feature_names)[1]
keys(feature_names)[1]
feature_names$[keys(feature_names)[1]]
feature_names$[[keys(feature_names)[1]]]
help(apply)
help(eapply)
help(hash)
feature_names
scanPairs(feature_names, print)
env <- new.env(hash = FALSE)
env$a <- 1:10
env
env$beta <- exp(-3:3)
env
env$logic <- c(TRUE, FALSE, FALSE, TRUE)
utils::ls.str(env)
eapply(env, mean)
unlist(eapply(env, mean, USE.NAMES = FALSE))
eapply(env, mean, USE.NAMES = FALSE)
utils::ls.str(env)
env$feature_names <- hash("color" = 4, "opacity" = 5, "taste" = 6, "body" = 7, "carbonation" = 8)
env <- new.env(hash = FALSE)
env$feature_names <- hash("color" = 4, "opacity" = 5, "taste" = 6, "body" = 7, "carbonation" = 8)
env
utils::ls.str(env)
env <- new.env(hash = TRUE)
env$feature_names <- hash("color" = 4, "opacity" = 5, "taste" = 6, "body" = 7, "carbonation" = 8)
utils::ls.str(env)
eapply(env, mean)
eapply(env, multiToBinary)
env$feature_names
env$feature_names[1]
env$feature_names$body
env$feature_names$key
env$feature_names.keys
feature_names <- cbind("color" = 4, "opacity" = 5, "taste" = 6, "body" = 7, "carbonation" = 8)
feature_names
feature_names[1]
feature_names$color
feature_names[1]
colnames(feature_names)
colnames(feature_names)[1]
length(feature_names)
feature_names[1]
beer_data <- import("BeerSurveyResponses_Test.csv")
beer_data
for (i in 1:length(feature_names)) {
beer_data <- multiToBinary(beer_data, colnames(feature_names)[i], feature_names[i])
}
beer_data
